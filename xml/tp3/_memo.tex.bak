\documentclass[french, 12pt]{report}
\usepackage[latin1, utf8]{inputenc}
\usepackage{color}
\usepackage{graphicx}
\usepackage{listings}
\usepackage{amssymb}
\usepackage{amsmath}
\usepackage{pstricks}
\usepackage{enumitem}
\usepackage{multicol}
\usepackage{verbatim}
\usepackage{listings}
\usepackage{tikz}
\usetikzlibrary{arrows,automata}
\usepackage{pgfplots}
\usepackage{pgfplotstable}
\usepackage{xifthen}

\pgfplotsset{compat=1.16}
\setlist[description]{leftmargin=\parindent,labelindent=\parindent}

\definecolor{gray}{rgb}{0.4,0.4,0.4}
\definecolor{darkblue}{rgb}{0.0,0.0,0.6}
\definecolor{cyan}{rgb}{0.0,0.6,0.6}
\definecolor{darkgreen}{RGB}{0,150,0}
 	
\newcommand{\cblue}[1]{ \textcolor{blue}{#1}}
\newcommand{\corange}[1]{ \textcolor{orange}{#1}}
\newcommand{\cviolet}[1]{ \textcolor{violet}{#1}}
\newcommand{\crouge}[1]{ \textcolor{red}{#1}}
\newcommand{\cvert}[1]{ \textcolor{darkgreen}{#1}}
\newcommand{\cgris}[1]{ \textcolor{gray}{#1}}

%% ------------------------- Formular
\newcommand{\cformular}[2]{
\begin{center} 
\begin{description} 
\item[#1] #2 
\end{description} 
\end{center}
}
%% ------------------------- END Formular

%% ------------------------- RO Model
\newcommand{\rovarinout}[5]{
\begin{description}
\item[La variable entrante sera] #1
\item[La variable sortante sera] #2 car:
\end{description}
\begin{multicols}{3}
#3, #4, #5
\end{multicols}
}

\newcommand{\romodel}[8]{
\begin{multicols}{2}
[Voici le nouveau modèle:]
\begin{description}
\item[Déterminer] #1
\item[#2] #3 % ((2) maximisant | minimisant )
\item[Variables hors base] #4
\item[Variables de Base] #5
\item[Solution admissible] #6 et Z = #7
\end{description}
#8 % contraintes
\end{multicols}
}
%% ------------------------- END RO Model

%% ------------------------- XML

\lstset{
  basicstyle=\ttfamily,
  columns=fullflexible,
  showstringspaces=false,
  commentstyle=\color{gray}\upshape
}

\lstdefinelanguage{XML}
{
  morestring=[b]",
  morestring=[s]{>}{<},
  morecomment=[s]{<?}{?>},
  stringstyle=\color{black},
  identifierstyle=\color{darkblue},
  keywordstyle=\color{cyan},
  morekeywords={xmlns,version,type}% list your attributes here
}
%% ------------------------ END XML

%% ------------------------ Almost all
\newcommand{\almost}{\mid\kern-0.40em{\backsim}\ }
%% ------------------------ END Almost all

%% ------------------------ Inverse DL lite
\newcommand{\inverse}{\urcorner\ }
%% ------------------------ End Inverse DL lite

%% ------------------------ Python code for Machine leaning
\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolor}{rgb}{0.97,0.97,0.95}

\lstdefinestyle{mlpythoncode}{
    backgroundcolor=\color{backcolor},   
    commentstyle=\color{codepurple},
    keywordstyle=\color{codegreen},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{magenta},
    basicstyle=\footnotesize,
    breakatwhitespace=false,         
    breaklines=true,                 
    captionpos=b,                    
    keepspaces=true,                 
    numbers=left,                    
    numbersep=5pt,                  
    showspaces=false,                
    showstringspaces=false,
    showtabs=false,                  
    tabsize=2,   
    emph={[2]dblp.xml, file.gob, *.gob, resultSet.txt, <le jar>},
	emphstyle=[2]\color{blue}
}

\newcommand{\sepline}{\textcolor{gray}{\noindent\rule{14cm}{0.1pt}}}
\newcommand{\paramtype}[1]{\textcolor{gray}{\textsf{\textit{#1}}}}

\newcommand{\funcdoc}[4]{
	\ \\
	\textit{\textsf{\cblue{#1}}}
    \ifthenelse{\isempty{#2}}%
    {}%
	{    \ \\\sepline\ \\
	\textbf{Paramètres}
	{#2}}
    \ifthenelse{\isempty{#3}}%
    {}%
	{    \ \\\sepline\ \\
	\textbf{Retourné}
	{#3}}
    \ifthenelse{\isempty{#4}}%
    {}%
	{    \ \\\sepline\ \\
	\textbf{Méthodes}
	{#4}}
}

%% ------------------------ END Python code

\title{Projet SaxGuy xml README}
\author{LAURENT Thomas $|$ STEFANIAK Adam}
\date{Master 2 informatique 2018}

\begin{document}
\maketitle
\pagebreak

\begin{titlepage}
\end{titlepage}
\pagebreak

\section{Que contient l'archive}
\begin{description}
\item[un jar] C'est l'exécutable exécutant le projet.
\item[un fichier xsltextract.xsl] Indispensable pour le second sujet.
\item[un fichier extract.dtd] Pour la validation du code xml généré lors du second sujet.
\item[un readme] coucou c'est moi.
\item[un dossier src] les sources. 
\end{description}

\section{Prêt requit}
Les fichiers suivant seront demandé pour la bonne progression du jar (à placer dans le même répertoire)
\begin{description}
\item[dblp.xml]
\item[le jar]
\item[le fichier xsltextract.xsl]
\item[la dtd associé au data xml]
\item[le fichier extract.dtd]
\end{description}

\section{Comment utiliser le jar}
Vous pouvez lancer le jar sans argument pour avoir les patterns d'argument

\lstset{style=mlpythoncode}
\begin{lstlisting}[]
$ java -jar <le jar>
If you want to run any commandes below, restart with 'java -DentityExpansionLimit=0 -jar <le jar>'
Question 1:   -name name dblp.xml
Question 2a:  -out file.gob dblp.xml
Question 2b:  -name name -in file.gob
Question 3:   -name name dblp.xml -extract file.gob
Use *.gob or resultSet.txt as output file for gitignore
\end{lstlisting}
\pagebreak
Exemple d'utilisation des commandes:

\begin{description}
\item[Question 1] java -DentityExpansionLimit=0 -jar $<le jar>$ -name "Totor le Castor" dblp.xml
\item[Question 2 (génération du fichier)] java -DentityExpansionLimit=0 -jar $<le jar>$ -out file.gob dblp.xml
\item[Question 2 (recherche dans le fichier généré)] java -DentityExpansionLimit=0 -jar $<le jar>$ -name "Totor le Castion" -in file.gob
\item[Question 3 (génération du fichier avec xslt)] java -DentityExpansionLimit=0 -jar $<le jar>$ -name "Totor le Castor dblp.xml -extract fichier.html
\end{description}

\end{document}

